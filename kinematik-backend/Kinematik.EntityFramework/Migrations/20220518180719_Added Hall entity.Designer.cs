// <auto-generated />
using System;
using Kinematik.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kinematik.EntityFramework.Migrations
{
    [DbContext(typeof(KinematikDbContext))]
    [Migration("20220518180719_Added Hall entity")]
    partial class AddedHallentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kinematik.Domain.Entities.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeaturedImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImdbID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageID")
                        .HasColumnType("int");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Runtime")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.FilmToGenrePair", b =>
                {
                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.HasKey("FilmID", "GenreID");

                    b.HasIndex("GenreID");

                    b.ToTable("FilmToGenrePairs");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.Hall", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.Film", b =>
                {
                    b.HasOne("Kinematik.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.FilmToGenrePair", b =>
                {
                    b.HasOne("Kinematik.Domain.Entities.Film", "Film")
                        .WithMany("GenrePairs")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kinematik.Domain.Entities.Genre", "Genre")
                        .WithMany("FilmPairs")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.Film", b =>
                {
                    b.Navigation("GenrePairs");
                });

            modelBuilder.Entity("Kinematik.Domain.Entities.Genre", b =>
                {
                    b.Navigation("FilmPairs");
                });
#pragma warning restore 612, 618
        }
    }
}
